// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id          String  @id @default(cuid())
  name        String
  username    String? @unique
  email       String  @unique
  phoneNumber String? @unique

  vehicleUnits VehicleUnit[] // A customer can have multiple vehicle units

  @@map("customers") // Maps the model to the 'customers' table
}

model VehicleUnit {
  id String @id @default(cuid())

  // ...???

  customerId String // Foreign key referencing Customer
  customer   Customer @relation(fields: [customerId], references: [id]) // Relationship back to Customer

  @@map("vehicle_units") // Maps the model to the 'vehicle_units' table
}

// Examples: ...?
model VehicleBrand {
  id   String @id @default(cuid())
  name String

  models VehicleModel[] // Prisma

  @@map("vehicle_brands")
}

// Examples: ...?
model VehicleModel {
  id   String @id @default(cuid())
  name String

  brand   VehicleBrand @relation(fields: [brandId], references: [id]) // Prisma
  brandId String

  types VehicleType[]

  @@map("vehicle_models")
}

// Examples: ...?
model VehicleType {
  id   String @id @default(cuid())
  name String

  modelId String
  model   VehicleModel   @relation(fields: [modelId], references: [id]) // Prisma
  colors  VehicleColor[]

  @@map("vehicle_types")
}

// Examples: ...?
model VehicleColor {
  id   String @id @default(cuid())
  name String

  type   VehicleType? @relation(fields: [typeId], references: [id])
  typeId String?

  @@map("vehicle_colors")
}
